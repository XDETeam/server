@page "/ru/labs/kubernetes-on-wsl2-and-podman"

<h1>Кластер Kubernetes <span>на базе WSL2 и Podman</span></h1>

<section>
    <h2>TODO: Как запускать WSL в daemon-style</h2>

    <p>Имеет ли смысл запустить Podman непосредственно на Windows?</p>
    <p>
        "podman machine start" даёт следующий результат (надо будет попробовать соединение
        докер-клиентами, например VSCode/VS).
    </p>
    <pre>
        This machine is currently configured in rootless mode. If your containers
        require root permissions (e.g. ports &lt; 1024), or if you run into compatibility
        issues with non-podman clients, you can switch using the following command:

                podman machine set --rootful

        API forwarding listening on: npipe:////./pipe/podman-machine-default

        Another process was listening on the default Docker API pipe address.
        You can still connect Docker API clients by setting DOCKER HOST using the
        following powershell command in your terminal session:

                $Env:DOCKER_HOST = 'npipe:////./pipe/podman-machine-default'

        Or in a classic CMD prompt:

                set DOCKER_HOST = 'npipe:////./pipe/podman-machine-default'

        Alternatively terminate the other process and restart podman machine.
        Machine "podman-machine-default" started successfully        
    </pre>
    <p>
        $ podman run -p 8029:80 -d docker.io/library/nginx
    </p>
    <p>
        Тестовый сайт заработал на localhost, но не в LAN.
        "echo 'net.ipv4.conf.all.route_localnet = 1' | sudo tee -a /etc/sysctl.conf"
        не помог.
    </p>
    <p>
        wsl --shutdown остановил сайт, но не сервис. Чтобы он заработал, понадобилось
        делать "podman machine start", "podman start {container}"
        <span>Посмотреть https://www.tutorialworks.com/podman-systemd/</span>
    </p>
    <p>
        Когда я запустил "wsl -d podman-machine-default", то появилась информация про
        SystemD, а "ps -le" вывел не только процессы systemd, но и sshd. А вот
        "podman ps -a" не вывел ни одного сервиса.
    </p>
    <p>
        Периодически сервис nginx останавливается.
    </p>
    <p>
        Попробовать "podman create pod"?
    </p>
    <p>
        Попробовать kind соединить с Podman?
        https://github.com/kubernetes-sigs/kind/releases
    </p>
</section>

<section>
    <h2>TODO:WSL API и хостинг из Team Server</h2>

    <p>
        https://docs.microsoft.com/en-us/windows/win32/api/_wsl/
    </p>
    <p>
        https://github.com/Gitii/community.wsl.sdk
    </p>
    <p>
        https://github.com/wslhub/wsl-sdk-dotnet
    </p>
</section>

<section>
    <h2>TODO: Эксперимент на Fedora Remix</h2>

    <pre>
        $ sudo dnf install daemonize fontconfig
        $ sudo vi /usr/sbin/start-systemd-namespace
    </pre>

    <pre>
        #!/bin/bash

        SYSTEMD_PID=$(ps -ef | grep '/lib/systemd/systemd --system-unit=basic.target$' | grep -v unshare | awk '{print $2}')
        if [ -z "$SYSTEMD_PID" ] || [ "$SYSTEMD_PID" != "1" ]; then
            export PRE_NAMESPACE_PATH="$PATH"
            (set -o posix; set) | \
                grep -v "^BASH" | \
                grep -v "^DIRSTACK=" | \
                grep -v "^EUID=" | \
                grep -v "^GROUPS=" | \
                grep -v "^HOME=" | \
                grep -v "^HOSTNAME=" | \
                grep -v "^HOSTTYPE=" | \
                grep -v "^IFS='.*"$'\n'"'" | \
                grep -v "^LANG=" | \
                grep -v "^LOGNAME=" | \
                grep -v "^MACHTYPE=" | \
                grep -v "^NAME=" | \
                grep -v "^OPTERR=" | \
                grep -v "^OPTIND=" | \
                grep -v "^OSTYPE=" | \
                grep -v "^PIPESTATUS=" | \
                grep -v "^POSIXLY_CORRECT=" | \
                grep -v "^PPID=" | \
                grep -v "^PS1=" | \
                grep -v "^PS4=" | \
                grep -v "^SHELL=" | \
                grep -v "^SHELLOPTS=" | \
                grep -v "^SHLVL=" | \
                grep -v "^SYSTEMD_PID=" | \
                grep -v "^UID=" | \
                grep -v "^USER=" | \
                grep -v "^_=" | \
                cat - > "$HOME/.systemd-env"
            echo "PATH='$PATH'" >> "$HOME/.systemd-env"
            exec sudo /usr/sbin/enter-systemd-namespace "$BASH_EXECUTION_STRING"
        fi
        if [ -n "$PRE_NAMESPACE_PATH" ]; then
            export PATH="$PRE_NAMESPACE_PATH"
        fi    
    </pre>

    <pre>
        sudo vi /usr/sbin/enter-systemd-namespace    
    </pre>

    <pre>
        #!/bin/bash

        if [ "$UID" != 0 ]; then
            echo "You need to run $0 through sudo"
            exit 1
        fi

        SYSTEMD_PID="$(ps -ef | grep '/lib/systemd/systemd --system-unit=basic.target$' | grep -v unshare | awk '{print $2}')"
        if [ -z "$SYSTEMD_PID" ]; then
            /usr/sbin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target
            while [ -z "$SYSTEMD_PID" ]; do
                SYSTEMD_PID="$(ps -ef | grep '/lib/systemd/systemd --system-unit=basic.target$' | grep -v unshare | awk '{print $2}')"
            done
        fi

        if [ -n "$SYSTEMD_PID" ] && [ "$SYSTEMD_PID" != "1" ]; then
            if [ -n "$1" ] && [ "$1" != "bash --login" ] && [ "$1" != "/bin/bash --login" ]; then
                exec /usr/bin/nsenter -t "$SYSTEMD_PID" -a \
                    /usr/bin/sudo -H -u "$SUDO_USER" \
                    /bin/bash -c 'set -a; source "$HOME/.systemd-env"; set +a; exec bash -c '"$(printf "%q" "$@@")"
            else
                exec /usr/bin/nsenter -t "$SYSTEMD_PID" -a \
                    /bin/login -p -f "$SUDO_USER" \
                    $(/bin/cat "$HOME/.systemd-env" | grep -v "^PATH=")
            fi
            echo "Existential crisis"
        fi
        </pre>
</section>