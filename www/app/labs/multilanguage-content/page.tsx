//TODO:
import { Article } from "@/components/Article";
import { ComponentType } from "react";

const Page = () => (
    <Article>
        <h1>Multi-language content</h1>

        <h2>TODO: Предварительный набросок проблематики</h2>

        <h3>Часть и целое</h3>
        <p>
            Если взять определённый контент и разбить его на блоки (параграфы с текстом, таблицы,
            иллюстрации, примеры кода, формулы и т.п.), то с высокой степенью вероятности не все
            компоненты будут нуждаться в переводе. Или, возможен другой вариант, когда направления
            перевода будут существенно отличаться. Например, текстовый блок предполагает переводы
            на натуральные языки, а блок кода может предполагать &quot;перевод&quot; на разные языки
            программирования. Какая-то часть может быть передана как на языке SQL, так и на языке
            IDEF1x. Аналогичным образом структура контента может быть совершенно независима от языков.
            Таким образом первая проблема - перевод осуществляется частями.
        </p>

        <h3>Опциональный перевод</h3>
        <p>
            TODO: Отсутствующий перевод, Fallback
        </p>

        <h3>Версионирование</h3>
        <p>
            Определённая сложность возникает с тем, чтобы синхронизировать переводы. Очевидно, что
            будет определённый интервал между модификацией на языке A и последующими модификациями
            на языках B и C. Каким образом будет формироваться контент на этом этапе? Как разработчики
            будут оповещаться о необходимости обновления переводов? Причём, здесь может потеряться
            концепция мастер-языка, поскольку изменения могут вноситься в любой из них. Ещё один
            нюанс, когда возникают конфликты при параллельном изменении на двух языках.
        </p>

        <h3>Удобство работы</h3>
        <p>
            В идеале обеспечить удобство работы как в рамках одного языка, так и кросс-язычные.
        </p>

        <h2>TODO: Экспериментальные решение 1 для TSX/React</h2>
        <p>
            Предположим, у нас есть решение layout-компонент, описывающий структуру. Она, с высокой
            степенью вероятности, не будет подвергаться переводу. Хотя и такое не исключено.
            Потенциально мы получим такую картину:
        </p>

        <pre>{`
            export const SomeContent = () => (
                <>
                    <SomeHeader />
                    <SomeAbstract />
                    <SomeSection1 />
                    ...
                </>
            )
        `}</pre>

        <h2>TODO: Экспериментальное решение 2 для Next.js/React/TSX</h2>

        <section>
            <h2>InBox</h2>

            <ul>
                <li>
                    Может быть намного проще синхронизировать контент, если ведётся запись изменений
                    в нём. Например, CRDT, но и diff-логика тоже видится приемлемой. Может блочное
                    изменение (на уровне блоков в ML-языках вроде XML/HTML).
                </li>
            </ul>
        </section>
    </Article>
)

// const translate = (lang: string, Content: ComponentType) => {
//     return () => (
//         <Content />
//     )
// }
//
//export default translate("ru", Page);

export default Page;
