import Link from "next/link";

import { Article } from "@/components/Article";
import { LabsLink } from "@/labs/contracts";
import XdeTeam from "@/labs/xde-team";
import XdeApp from "@/labs/xde-app";

const Page = () => (
    <Article>
        <h1>XDE.Academy</h1>

        <h2>TODO:Потенциальная стратегия</h2>
        <p>
            Программное обеспечение в целом и языки программирования в частности &ndash; это в
            некотором смысле универсальный язык для любых областей человеческой деятельности.
            Музыканты и биологи, художники и работники строительной отрасли, практически не
            осталось специалистов, которые бы так или иначе не использовали те или иные
            приложения.
        </p>
        <p>
            Возьмем в качестве точки опоры идею приложения <XdeApp.Link/>. Это продукт, который
            "делает всё". Но речь здесь идёт не о абсурдной, фантастической задаче, когда нечто
            что делает всё и сразу. А о том, что системные архитекторы, разрабатывающие гигантские
            программные комплексы, называют масштабированием. Решение начинается с некоторой платформы,
            которая предусматривает фундамент, на котором всем остальным задачам будет намного
            проще выстраиваться. Это как несущая основа здания, которое может потом заполняться самыми
            разными офисами.
        </p>
        <p>
            В некотором смысле такие платформы уже существуют. Для управления проектами и тестирования,
            для организации интерфейсов и коммуникаций, для хранения данных и их обработки. Например,
            СУБД (системы управления базами данных) предлагают универсальные механизмы для работы с
            данными, в независимости от того, описывают они музыкальное произведение или конструкцию
            космической ракеты.
        </p>
        <p>
            Формирование такого фундамента в приложении <XdeApp.Link/> &ndash; становится очень похожим
            на формирование основы образования. Как лучше понять другие области знаний, как их
            организовать, как разделить общие и специфичные детали, какие между ними зависимости, а
            значит в какой последовательности с ними работать. Разработка подобного универсального
            приложения выглядит как органичный образовательный процесс. Выстраивание форм внутри
            приложения и выстраивание аналогичных конструкций в нашем понимании мира практически
            полностью тождественны. А значит, его разработку можно сделать основой образовательного
            процесса.
        </p>
        <p>
            С точки зрения <LabsLink>интересов {XdeTeam.Caption}</LabsLink> и её стратегии первым
            идёт развитие личности. И первые же шаги в разработке данного приложения могут быть
            нацеленны именно на эту задачу. Особенно в рамках данной академии.
        </p>
        <p>
            Например, есть такая техника запоминания материалов как "Spaced repetition". В быту
            многим известно приложение Anki, которое её реализует. Оно задаёт человеку вопрос
            из базы и в зависимости от правильности ответа на него определяет время, когда его
            задать в следующий раз. Ошибся &ndash; имеет смысл повторить через день. Уже третий
            раз отвечаешь правильно &ndash; можно отложить и на месяц.
        </p>
        <p>
            Эта техника не зависит от областей знаний и с равным успехом может быть применена в
            любой из них. По сути, ученики начинают с получения базовых знаний
            из <Link href="/labs/technology">технологии</Link> и <Link href="/labs/informatics">информатики</Link> для
            того, чтобы их сразу применять к созданию простого модуля <XdeApp.Link/>, реализующего
            кросс-дисциплинарную технику "spaced repetition", которая в свою очередь начинает
            помогать в закреплении полученных знаний.
        </p>
        <p>
            На следующих этапах могут быть исследованы области управление временем, задачами. Которые
            также применимы к самым разным областям и аналогичным образом могут помочь студентам
            более эффективным образом организовывать свой же образовательный процесс. Который, напомним,
            мы рассматривает тоже как продукт деятельности инженера, как и в любой другой сфере их
            деятельности.
        </p>
        <p>
            За этим процессом может последовать организация работы командной работы и коммуникаций,
            модульные системы, способы взаимодействия между этими модулями и многие процессы, связанные
            с <Link href="/labs/technology">технологией</Link> и <Link href="/labs/informatics">информатикой</Link> как
            дисциплинами, которые мы рассматриваем в роли базовых. 
        </p>
        <p>
            Последовательное и методичное внесение знаний в приложение будет выступать средством
            контроля органичности и целостности образовательного процесса, поскольку в противном
            случае приложение просто не может работать.
        </p>

        <h2>TODO:Потенциальная тактика</h2>
        <p>
            Как правило, образование начинается с решения примитивных задач. От простых они отличаются
            тем, что носят синтетический характер. Тогда как простые &ndash; это понятное решение даже
            для самых сложных. Опыт решения примитивных в реальной практике практически бесполезен,
            поэтому большинству студентов приходится переучиваться непосредственно на рабочем месте и
            немалая доля из полутора десятков лет инвестированных в образование становится бесполезной.
            Мы идём по принципу  методичного выстраивания очень сложного продукта &ndash; <XdeApp.Link/>.
        </p>
        <p>
            В качестве эксперимента можно попробовать начать с .NET и BDD, в рамках
            концепции <Link href="/labs/executable-specification">Specs/Executable specifications</Link>.
            Во-первых, сложные приложения невозможно строить без TDD-подхода, который сам по себе
            может быть интересной инженерной концепцией. Во-вторых, сам BDD начинается с простых
            выражений на естественном языке. Дальше достаточно короткий переход к DI, за которым
            будут самые простые реализации, с последующим ростом до самых сложных.
        </p>

        <h2>InBox</h2>

        <p>
            Интересным практическим кандидатом для исследования является идея рассматривать
            человеческую деятельность на примере
            лаборатории <Link href="/labs/application-flow">Application flow</Link>.
        </p>
    </Article>
);

export default Page;
